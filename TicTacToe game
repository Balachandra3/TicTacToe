// this is This Java program implements a two-player Tic-Tac-Toe game.
//It includes a game class that manages the 3x3 board, checks for wins (rows, columns, diagonals), and handles draw conditions.
//The humanPlayer class represents a player with attributes for the player's name and mark (either 'X' or 'O'), and it contains methods to make a move by placing the mark on the board after validating the input. 
//The main class, Launch, initializes the game, creates two players (Bob with 'X' and Priya with 'O'), and runs a loop where each player takes turns until the game ends.
//After each move, the program checks for a win or draw condition. If a player wins or the board is full (indicating a draw), the game ends with a respective message.




package TicTacToeGame;
import java.util.Scanner;

class game {
    static char[][] board;

    // Constructor to initialize the board
    public game() {
        board = new char[3][3];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                board[i][j] = ' ';
            }
        }
    }

    // Display the board
    static void disp() {
        System.out.println("-------------");
        for (int i = 0; i < board.length; i++) {
            System.out.print("| ");
            for (int j = 0; j < board[i].length; j++) {
                System.out.print(board[i][j] + " | ");
            }
            System.out.println();
            System.out.println("-------------");
        }
    }

    // Place a mark on the board
    static void placemark(int row, int col, char mark) {
        if (row >= 0 && row <= 2 && col >= 0 && col <= 2) {
            board[row][col] = mark;
        } else {
            System.out.println("Invalid move");
        }
    }

    // Check columns for a win
    static boolean colcheck() {
        for (int j = 0; j < 3; j++) {
            if (board[0][j] != ' ' && board[0][j] == board[1][j] && board[1][j] == board[2][j]) {
                return true;
            }
        }
        return false;
    }

    // Check rows for a win
    static boolean rowcheck() {
        for (int i = 0; i < 3; i++) {
            if (board[i][0] != ' ' && board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
                return true;
            }
        }
        return false;
    }

    // Check diagonals for a win
    static boolean digcheck() {
        if ((board[0][0] != ' ' && board[0][0] == board[1][1] && board[1][1] == board[2][2]) ||
            (board[0][2] != ' ' && board[0][2] == board[1][1] && board[1][1] == board[2][0])) {
            return true;
        }
        return false;
    }

    // Check for a draw
    static boolean isDraw() {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == ' ') {
                    return false;
                }
            }
        }
        return true;
    }
}

class humanPlayer {
    String name;
    char mark;

    public humanPlayer(String name, char mark) {
        this.name = name;
        this.mark = mark;
    }

    // Make a move by placing the mark on the board
    void makemove() {
        Scanner scan = new Scanner(System.in);
        int row, col;
        do {
            System.out.println(name + ", enter row and column:");
            row = scan.nextInt();
            col = scan.nextInt();
        } while (!isvalid(row, col));

        game.placemark(row, col, mark);
    }

    // Validate the move
    boolean isvalid(int row, int col) {
        if (row >= 0 && row <= 2 && col >= 0 && col <= 2) {
            return game.board[row][col] == ' ';
        }
        return false;
    }
}

public class Launch {
    public static void main(String[] args) {
        game g = new game();  // Initialize the game board
        humanPlayer p1 = new humanPlayer("Bob", 'X');
        humanPlayer p2 = new humanPlayer("Priya", 'O');

        humanPlayer cp = p1;
        while (true) {
            System.out.println(cp.name + "'s turn");
            cp.makemove();
            game.disp();

            if (game.colcheck() || game.rowcheck() || game.digcheck()) {
                System.out.println(cp.name + " won!");
                break;
            } else if (game.isDraw()) {  // Check for draw
                System.out.println("It's a draw!");
                break;
            } else {
                cp = (cp == p1) ? p2 : p1;  // Switch player
            }
        }
    }
}
